// Generated by dts-bundle-generator v8.1.2

export declare enum Locales {
	Default = "en",
	De = "de",
	Es = "es",
	Fr = "fr",
	It = "it",
	Pl = "pl",
	Pt = "pt",
	Tr = "tr"
}
export type ModuleObject = Record<string, string>;
export type LocaleObject = Record<string, ModuleObject>;
export interface LocaleOptions {
	module: string;
}
export declare class LocaleTranslator {
	private moduleObject;
	options: LocaleOptions;
	constructor(moduleObject: ModuleObject | undefined, options: LocaleOptions);
	translate(key: string, variables?: Record<string, string>): string;
}
export declare class LocaleContext {
	localeObject?: LocaleObject;
	constructor(localeObject?: LocaleObject);
	createTranslator(options: LocaleOptions): LocaleTranslator;
}
export declare class LocaleClient {
	private scope;
	private contextCache;
	private loadCache;
	constructor(scope: string);
	getContext(route: string, locale: Locales): Promise<LocaleContext | undefined>;
	static transformToSupportedLocale(locale: any): Locales;
}

export {};
