var s=((t)=>typeof require!=="undefined"?require:typeof Proxy!=="undefined"?new Proxy(t,{get:(i,l)=>(typeof require!=="undefined"?require:i)[l]}):t)(function(t){if(typeof require!=="undefined")return require.apply(this,arguments);throw Error('Dynamic require of "'+t+'" is not supported')});var r;(function(e){e["Default"]="en";e["De"]="de";e["Es"]="es";e["Fr"]="fr";e["It"]="it";e["Pl"]="pl";e["Pt"]="pt";e["Tr"]="tr"})(r||(r={}));class o{localeObject;localeString;defaultLocaleString;removeDash;constructor({locale:t,localeRoute:i,localeModule:l,removeDash:a=!1}){this.removeDash=a,this.defaultLocaleString=this.removeDash?r.Default.split("-")[0]:r.Default,this.localeString=this.removeDash?(t||this.defaultLocaleString).split("-")[0]:t||this.defaultLocaleString;let n;try{n=s(`../locales/${i}/${t}.json`)}catch{n=s(`../locales/${i}/${this.defaultLocaleString}.json`),this.localeString=this.defaultLocaleString}this.localeObject=n[l]}translate(t,i){return this.localeObject[t].replace(/{(.*?)}/gi,(a,n)=>{return i?.[n]??""})}numberToLocaleString(t){return t.toLocaleString(this.localeString)}static transformToSupportedLocale(t){if(typeof t!=="string")return r.Default;if(Object.values(r).includes(t))return t;return r.Default}}export{r as Locales,o as LocaleClient};
